<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>a dystopian journey into the heart of tech</title><link>https://1x-eng.github.io/blog/</link><description>Recent content on a dystopian journey into the heart of tech</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 25 Jan 2025 15:38:09 +1100</lastBuildDate><atom:link href="https://1x-eng.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Contexts in Go Fiber</title><link>https://1x-eng.github.io/blog/posts/contexts-in-go-fiber/</link><pubDate>Sat, 25 Jan 2025 15:38:09 +1100</pubDate><guid>https://1x-eng.github.io/blog/posts/contexts-in-go-fiber/</guid><description>üïµÔ∏è‚Äç‚ôÇÔ∏è The Hidden Cost of Context Handling in Web Frameworks: How I Spent a Week Chasing Heisenbugs and What It Taught Me About Fiber&amp;rsquo;s Context Pool 1. The Mystery: Intermittent User Data Leaks üîç Scenario: You deploy a shiny new user profile endpoint. It works perfectly in testing, but in production:
- User A sometimes sees User B&amp;#39;s email - 500 errors spike during load tests - Logs show impossible type assertions The Smoking Gun: üí£ 1 2 3 4 5 // Your innocent-looking handler func GetProfile(c *fiber.</description></item><item><title>The Space Between Notes</title><link>https://1x-eng.github.io/blog/posts/cipher/</link><pubDate>Tue, 21 Jan 2025 09:36:09 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/cipher/</guid><description>Noticing Patterns in My Own Thoughts: An Exploration with Cipher üß© Within stillness, patterns emerge; within patterns, a quiet understanding.
There are times when life feels like a rush, a constant flow of information and tasks. It&amp;rsquo;s easy to find myself just reacting, moving from one thing to the next without much pause. I sometimes wonder if I&amp;rsquo;m just skimming the surface, missing connections and not fully understanding what&amp;rsquo;s happening around me, or even within my own thoughts.</description></item><item><title>Tomatick</title><link>https://1x-eng.github.io/blog/posts/tomatick/</link><pubDate>Wed, 30 Oct 2024 14:59:47 +1100</pubDate><guid>https://1x-eng.github.io/blog/posts/tomatick/</guid><description>Tomatick: Yet Another Attempt to Rethink Productivity üéØ Meh&amp;hellip; what&amp;rsquo;s with the name? Well, it&amp;rsquo;s a combination of &amp;ldquo;tomato&amp;rdquo; and &amp;ldquo;tick&amp;rdquo; (as in a timer) ü§∑ Dad joke? Maybe.
The Problem with Traditional Productivity Tools ‚ö†Ô∏è Every productivity tool promises to make you more efficient. Most fail. (At least, that&amp;rsquo;s my experience.) Why? Because they fundamentally misunderstand how human cognition works. They treat our brains like simple input-output machines: set a timer, get focused work.</description></item><item><title>Toxic Paw-sitivity: How I Barked up the wrong Tree</title><link>https://1x-eng.github.io/blog/posts/toxic-positivity/</link><pubDate>Wed, 16 Oct 2024 14:19:22 +1100</pubDate><guid>https://1x-eng.github.io/blog/posts/toxic-positivity/</guid><description>The Accidental Success Syndrome: Time spent (no, wasted): trying to course correct a company that was never on course in the first place Picture this: It&amp;rsquo;s some year in between 2015 &amp;amp; 2020, and a plucky startup called (hypothetical and made up, of course) DoggoTech launches a &amp;lsquo;product&amp;rsquo; that&amp;hellip; lets you swipe right on pictures of adoptable dogs. (again, hypothetical and made up domain/product type for pets). It&amp;rsquo;s basically similar to some really popular products out there, but focused on pets &amp;ndash; dogs particularly.</description></item><item><title>Ikigai</title><link>https://1x-eng.github.io/blog/posts/ikigai/</link><pubDate>Fri, 16 Aug 2024 21:11:27 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/ikigai/</guid><description>Being cavalier about &amp;lsquo;Passion&amp;rsquo; or Ikigai. Some golden nuggets from Guy Kawasaki in this podcast:
üí• &amp;ldquo;If you have a growth mindset in a growth mindset organisation, you&amp;rsquo;ll do well. But, if you have a growth mindset in a fixed mindset organisation, you&amp;rsquo;ll suck&amp;rdquo;
üí• &amp;ldquo;People throw around the &amp;lsquo;P&amp;rsquo; word much too casually, much too cavalierly. We are setting people up for failure. And, people are like OMG, i&amp;rsquo;m supposed to find this passion and it&amp;rsquo;s supposed to be instant love and i&amp;rsquo;m supposed to be instantly good at it &amp;ndash; life does not work that way.</description></item><item><title>Mutex vs Semaphore</title><link>https://1x-eng.github.io/blog/posts/mutex-vs-semaphore/</link><pubDate>Thu, 15 Aug 2024 18:36:22 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/mutex-vs-semaphore/</guid><description>Mutex vs Semaphore: The Lesser of Two Evils Mutexes and semaphores are like siblings in the synchronization primitives family ‚Äî one a stickler for rules (mutex), the other more lenient but equally capable of chaos when misused (semaphore). I&amp;rsquo;ll try to dive into this family drama with a sprinkle of snark, to explore their strengths, weaknesses.. And, both drive me nuts when misused.
The Boring Theory Mutex A mutex, short for &amp;ldquo;mutual exclusion,&amp;rdquo; is like that one friend who insists on being the only one to use their fancy pen.</description></item><item><title>Biggest Problems</title><link>https://1x-eng.github.io/blog/posts/biggest-problems/</link><pubDate>Sat, 27 Jul 2024 10:42:07 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/biggest-problems/</guid><description>A big picture perspective üòÅ Two challenges at this point in time:
Natural Stupidity Artificial Intelligence is there a cure for (1) üòï?</description></item><item><title>Networking</title><link>https://1x-eng.github.io/blog/posts/networking/</link><pubDate>Tue, 21 May 2024 22:17:42 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/networking/</guid><description>Net-work-ing, huh üòí Networking is overrated. Become a person of value and the &amp;rsquo;network&amp;rsquo; will follow!</description></item><item><title>Clarity in Radomness</title><link>https://1x-eng.github.io/blog/posts/clarity-in-radomness/</link><pubDate>Thu, 09 May 2024 13:19:15 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/clarity-in-radomness/</guid><description>LinkedIn bios are&amp;hellip; well, seriously? Tough and wrong to generalize, but LinkedIn bios are seldom a joke. Having worked with quite a few over the last 16-17 years, some are absolutely terrible at tech, people skills, or most often both. But their LinkedIn profiles - oh my wow! On the contrary, those who are past the Dunning-Kruger curve have far less &amp;lsquo;shiny&amp;rsquo; LinkedIn bios, but these are people who can get things done.</description></item><item><title>Oh, Python is slow?</title><link>https://1x-eng.github.io/blog/posts/memory-in-python/</link><pubDate>Sun, 14 Apr 2024 12:19:45 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/memory-in-python/</guid><description>Sure, keep blaming the language like the rest of the herd ‚Äî But if your code‚Äôs leaky and crawling, Spoiler: it‚Äôs you, not the languageüòè
Ah, another day, another developer blaming Python for their code&amp;rsquo;s sluggish performance. üêå Before you join the chorus of the uninformed, let&amp;rsquo;s embark on a journey through the labyrinthine world of Python&amp;rsquo;s memory management.
The Architect&amp;rsquo;s Dilemma: Designing a Programming Language Ever fantasized about creating your own programming language?</description></item><item><title>Barrier: The Underdog Triumph in a Proprietary World</title><link>https://1x-eng.github.io/blog/posts/battling-the-multiscreen-barrier/</link><pubDate>Wed, 03 Jan 2024 16:47:41 +1100</pubDate><guid>https://1x-eng.github.io/blog/posts/battling-the-multiscreen-barrier/</guid><description>Multi-Screen Setups: battle stations, afterall. Right? &amp;#x1f609; I&amp;rsquo;m all about multi-monitor setups ‚Äì and I&amp;rsquo;m talking way beyond just a couple of screens. &amp;#x1f601; Sure, I&amp;rsquo;ve had my share of neck strains from less than ideal arrangements, but that&amp;rsquo;s part of the fun, right? Experimenting until everything clicks. My current pride and joy? A setup with two ultrawide monitors, a slim ultrawide, and my laptop&amp;rsquo;s screen. Yep, that&amp;rsquo;s four screens in total.</description></item><item><title>People the Problem</title><link>https://1x-eng.github.io/blog/posts/people-the-problem/</link><pubDate>Fri, 10 Nov 2023 08:53:12 +1100</pubDate><guid>https://1x-eng.github.io/blog/posts/people-the-problem/</guid><description>Smart-ass complex, not giving a shit &amp;amp; incompetence There&amp;rsquo;s no short of snarky, condescending tech articles out there, sometimes they are pure BS but often they are an attempt to paint the &amp;ldquo;picture&amp;rdquo; in black and white by some frustrated programmer. Stumbled upon Dimitry&amp;rsquo;s take - incompetent people are the problem, while we are strangers, his words struck a chord.
I resonate with these bits from Dimitry&amp;rsquo;s article &amp;amp; PS: all views are my own.</description></item><item><title>Point estimations and Sprints, huh</title><link>https://1x-eng.github.io/blog/posts/whats-with-points/</link><pubDate>Thu, 27 Jul 2023 17:47:42 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/whats-with-points/</guid><description>Yet another post about software estimations - shouldn&amp;rsquo;t it either be 1 point or NFI (No **** Idea) There are things that engineers - especially software folk do well, we nail some really hard intangible problems on its head and boy, it feels good to build something ground up or cleanup a pile of mess. But, this group, almost holistically suck at one thing - that is estimation.
Software engineers are notoriously poor estimators (well, its my blog so this is my view anyways).</description></item><item><title>Database Is Sacred</title><link>https://1x-eng.github.io/blog/posts/database-is-sacred/</link><pubDate>Thu, 06 Jul 2023 20:07:09 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/database-is-sacred/</guid><description>Database is Sacred: An &amp;ldquo;Engineer&amp;rsquo;s&amp;rdquo; Testament What does the word &amp;lsquo;database&amp;rsquo; make you think of? It&amp;rsquo;s probably difficult to generalize, but I&amp;rsquo;m guessing a good chunk of you would think of a &amp;lsquo;relational&amp;rsquo; flavor. Well, there&amp;rsquo;s no shortage of &amp;lsquo;flavors&amp;rsquo; among databases today, and I feel like talking ‚Äî or venting ‚Äî about how often relational databases are used beneath their potential today
(Relational) Databases are awesome My (not so distant) future self will probably negate this titleüòÅ, but for the purpose of this blog or the context in my head today, yes - relational databases are awesome.</description></item><item><title>We Have a Problem</title><link>https://1x-eng.github.io/blog/posts/we-have-a-problem/</link><pubDate>Sun, 10 Apr 2022 17:40:27 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/we-have-a-problem/</guid><description>The Reality of Imaginary Problems - In the context of Software Many factors lead to ineffective software development: from the tools used, to team communication, to the personal motivation of developers, the testing approach to the organisational leadership matrix. Among these, there&amp;rsquo;s a fundamental issue that often results in poorly conceived software: chasing perceived or, more often than not, non-existent problems, that take shape through the process to prove some kinda relevance by one or many involved directly or indirectly in the process.</description></item><item><title>Pipelines</title><link>https://1x-eng.github.io/blog/posts/pipelines/</link><pubDate>Tue, 01 Sep 2020 10:42:18 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/pipelines/</guid><description>Serverless Data Pipelines: AWS Glue is a potential future poster figure; maybe not just yet! Data engineering plays a pivotal role in the success of organizations, especially those that are data-driven. It can make or break an organization&amp;rsquo;s growth. Data pipelines form the foundation of data engineering. However, the term &amp;ldquo;pipeline&amp;rdquo; has become somewhat clich√©d in software engineering, as it can mean different things depending on the context and significance of the tasks involved.</description></item><item><title>Logs</title><link>https://1x-eng.github.io/blog/posts/logs/</link><pubDate>Mon, 29 Jun 2020 10:40:03 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/logs/</guid><description>Centralized logging &amp;amp; log analytics in a busy, distributed environment Logs play a crucial role in any system, providing valuable insights into your application&amp;rsquo;s behavior, system activities, and the causes of errors. It is essential to efficiently monitor these logs to ensure your system is functioning as expected. In case something goes wrong, you need to quickly identify the issue, understand what happened, and take preventive measures to avoid its recurrence.</description></item><item><title>Ethereact</title><link>https://1x-eng.github.io/blog/posts/ethereact/</link><pubDate>Fri, 26 Jul 2019 10:44:56 +1000</pubDate><guid>https://1x-eng.github.io/blog/posts/ethereact/</guid><description>ETHEReact: Build a Full Stack Decentralized E-Commerce App, Deploy to Ethereum Virtual Machine &amp;amp; Interact using ReactJS TL;DR This article is not an in-depth explanation of Blockchain or a marketing pitch for Crypto.
Instead, this article is intended to guide developers and blockchain enthusiasts in building an end-to-end prototype on the blockchain. By the end of this article, you will have constructed a basic decentralized e-commerce platform.
Throughout the article, you will write two contracts in Solidity (one for the supplier and another for the customer), compile and migrate your contract to the EVM (Ethereum Virtual Machine), create a simple ReactJS frontend, and connect your frontend to the EVM using web3.</description></item></channel></rss>